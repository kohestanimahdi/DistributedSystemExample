@page "/flights"

@using System.Text.RegularExpressions
@using Dtos.Requests
@using DistributedSystems.Web.Data
@using DistributedSystems.Common.Utilities
@inject grpcServices grpcServices
@inject DistributedSystems.Common.Utilities.RedisMessagePassing messagePassing

<h2>انتخاب سفر هوایی</h2>
<hr />


<EditForm class="container" Model="searchFlightRequest">
    <DataAnnotationsValidator />

    @if (airports != null)
    {
        <p>جهت انتخاب سفر خود، مبدا، مقصد و تاریخ پرواز خود را انتخاب کنید</p>

        <div class="form-group row m-1">
            <label for="firstName" class="col-sm-3 col-form-label">
                مبدا
            </label>
            <div class="col-sm-9">
                <InputSelect id="OriginCode" @bind-Value="searchFlightRequest.OriginCode" class="form-select">
                    @foreach (var dept in airports.CityAirports.OrderBy(i => i.PersianTitle))
                    {
                    <option value="@dept.Code">@Regex.Replace(dept.PersianTitle, @"\(.*\)","").Trim() </option>
                    }
            </InputSelect>
        </div>
    </div>
        <div class="form-group row m-1">
            <label for="firstName" class="col-sm-3 col-form-label">
                مقصد
            </label>
            <div class="col-sm-9">
                <InputSelect id="DestinationCode" @bind-Value="searchFlightRequest.DestinationCode" class="form-select">
                    @foreach (var dept in airports.CityAirports.OrderBy(i => i.PersianTitle))
                    {
                    <option value="@dept.Code">@Regex.Replace(dept.PersianTitle, @"\(.*\)","").Trim()</option>
                    }
            </InputSelect>
        </div>
    </div>

        <DntInputPersianDate @bind-Value="searchFlightRequest.DepartureDate"
                         LabelName="تاریخ پرواز"
                         FieldIcon="bi-calendar"
                         ShowCalendarOnFocus="true"
                         BeginningOfCentury="1400"
                         CalendarFromYear="1350"
                         CalendarToYear="1450"
                         UsePersianNumbers="true"
                         CalendarShowHolidays="false"
                         CalendarShowTodayButton="true"
                         CalendarUseShortPersianDayNamesOfWeek="true"
                         CalendarShowYearMonthDropdowns="true" />

        <div class="form-group row">
            <label for="firstName" class="col-sm-2 col-form-label">
                تعداد بزرگسال
            </label>
            <div class="col-sm-2">
                <InputNumber @bind-Value="searchFlightRequest.AdultCount" class="form-select"></InputNumber>
            </div>
            <label for="firstName" class="col-sm-2 col-form-label">
                تعداد کودک
            </label>
            <div class="col-sm-2">
                <InputNumber @bind-Value="searchFlightRequest.ChildCount" class="form-select"></InputNumber>
            </div>
            <label for="firstName" class="col-sm-2 col-form-label">
                تعداد نوزاد
            </label>
            <div class="col-sm-2">
                <InputNumber @bind-Value="searchFlightRequest.InfantCount" class="form-select"></InputNumber>
            </div>
        </div>

        <br />
    <div class="form-group row m-1">
        <div class="col-sm-12 text-center">
            <button type="submit" class="btn btn-primary btn-md" @onclick="SearchFlight" disabled=@disableSeachButton>جستجو</button>
        </div>

        </div>
    }
    else
    {
        <p>لطفا تا بارگذاری فرودگاه‌ها منتظر بمانید</p>
        <div class="text-center">
        <div class="spinner-border" role="status">
        </div>
        </div>
    }


</EditForm>
<br />
<hr />
<br />



@if (disableSeachButton)
{
    <div class="text-center">
        <div class="spinner-border" role="status">
        </div>
    </div>
}
else
{
    if (flights != null && flights.Flights != null && flights.Flights.Any(i => i.Prices.Any()))
    {
        <table class="table table-striped text-center">
            <thead>
                <tr>
                    <th>تارخ حرکت</th>
                    <th>زمان حرکت</th>
                    <th>تاریخ رسیدن</th>
                    <th>زمان رسیدن</th>
                    <th>هواپیمایی</th>
                    <th>شماره پرواز</th>
                    <th>ظرفیت</th>
                    <th>قیمت</th>
                    <th>خرید</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var flight in flights.Flights.Where(i => i.Prices.Any()))
                {
                    @foreach (var price in flight.Prices)
                    {
                        <tr>
                            <td>@DateTimeHelpers.ConvertToPersionDate(flight.Segments.First().Legs.First().DepartureTime)</td>
                            <td>@DateTimeHelpers.ConvertToPersionTime(flight.Segments.First().Legs.First().DepartureTime)</td>
                            <td>@DateTimeHelpers.ConvertToPersionDate(flight.Segments.First().Legs.First().ArrivalTime)</td>
                            <td>@DateTimeHelpers.ConvertToPersionTime(flight.Segments.First().Legs.First().ArrivalTime)</td>
                            <td>
                                <div class="form-group row">
                                    <div class="col-sm-6 text-center">
                                        @flight.Segments.First().Legs.First().Airline.PersianTitle
                                    </div>
                                    <div class="col-sm-6 text-center">
                                        <img style="height:50px; width:50px;" src=@flight.Segments.First().Legs.First().Airline.Logo.Replace("static.","") />
                                    </div>
                                </div>
                            </td>
                            <td>@flight.Segments.First().Legs.First().FlightNumber</td>
                            <td>@price.Capacity</td>
                            <td>@string.Format("{0:N0}",price.PassengerFares.First(i=>i.PaxType == "ADL")?.TotalFare)</td>
                            <td><a href=@price.Url target="_blank">خرید</a></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }
    else if (alreadySeached)
    {
        <p class="text-center">متاسفانه پروازی یافت نشد</p>
    }
}

@code {
    private Flight.GetAirPortsResponse airports;
    private Flight.GetFlightsResponse flights;
    private SearchFlightRequest searchFlightRequest;
    private bool disableSeachButton = false;
    private bool alreadySeached = false;

    protected override async Task OnInitializedAsync()
    {
        searchFlightRequest = new();
        airports = await grpcServices.GetAirportsAsync();
    }


    private async Task SearchFlight()
    {
        alreadySeached = true;
        try
        {
            disableSeachButton = true;
            flights = await grpcServices.GetFlightsAsync(searchFlightRequest);

        }
        catch { }
        finally
        {
            disableSeachButton = false;
        }
    }
}
